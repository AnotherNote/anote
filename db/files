{"title":"嘻嘻嘻嘻嘻嘻谢谢","content":"####hhhh\n\n####zkf\n\nhello\n\nzkf\n\nzkfjjhhh  我感觉还是挺好的不卡了\n\n肯定能够要懂一些东西preview才会再出现\n\nsdjfasjdfjadfjajsfjas\nsdfsjadfjlfjalj\nsdjfjasd水电费水电费\n\n斯蒂芬是否对\n对方身份登记身份卡时间的\n\n是短发接撒地方就\n\n是电风扇的积分\n\n水电费水电费就\n\n士大夫撒积分\n\nasdfadsjfsd \nfjadsf \n\ndfasjdfjj \n\n| hao  |hao    |\n| ------------ | ------------ |\n|  zhe |zhegedong    |\n\njkdjfjdfjsjdfkj\n\nsdfsdfjsjdf\n\ndfsfsjdfjsljf\n\n啥打法上打开附件就是","bookId":"qENKih7B24IcYIzV","_id":"2ybQV9X2G63Rh3po","createdAt":{"$$date":1472166197391},"updatedAt":{"$$date":1472178578801}}
{"title":"3333333对的","content":"3333 可以写一些东西我感觉还是挺好的如果可以写一些东西镇定的的回复的回复\n\n啥地方就是快捷方式的 \n\n容易初夏preview死掉了这是为什么\n\nsdfsdfd\ndsff\n\nasdfjfjakj \n\nsjfsajfasjd \n\nsdfjasldjfj dsfafsdfafsdfsd\n\n啥地方萨芬\n斯蒂芬是否是\n\nsfsadf\n\n\nsdffas\n\nsdfsdf\n\nsdfasdf\n\n啥地方萨芬\n好的话好的护肤和第三方\n\n大姐夫的姐夫的手机费\n\n感觉很多东西是可以自己定制的还是挺好的\n\n这个东西要是可以自己定制应该是挺好的e\n\nsdfasfjadf \n\nasdfasdfjs \nsdfjask \njjjjjjjjjjj\n\nsdfsjfsadjf","bookId":"qENKih7B24IcYIzV","_id":"GNkbFqZbzt3DdmXq","createdAt":{"$$date":1472165295782},"updatedAt":{"$$date":1472178527003}}
{"title":"新的文章","content":"我感觉还是好地方撒哈哈哦这栋西药师可以\n\n是打发时间放假放假\n\n收电费卡拉斯加附件阿萨德","bookId":"qENKih7B24IcYIzV","_id":"RAVxbIaad55orzgK","createdAt":{"$$date":1472178551033},"updatedAt":{"$$date":1472178571208}}
{"title":"444444444","content":"由于最近看到了简书上关于这个的[文章](http://www.jianshu.com/p/fb08b7ef31de)，想到原来在coding上看过这方面的[文章](https://blog.coding.net/blog/the-difference-between-throttle-and-debounce-in-underscorejs)所以记录总结一下。\n####throttle （``_.throttle(func, wait, options)``）\n这个函数的作用就是防止多次频繁的调用，规定在wait左右只能执行一次，目的是限制执行频率。\n用法如下：\n ```\nvar throttled = _.throttle(updatePosition, 100);\n$(window).scroll(throttled);\n```\n这样在滚动的时候就可以控制一下发生的频率。\nunderscore的源码如下：\n```\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      // 如果options.leading === false在这里重新设置 previous\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      // 但是args每次都是最新的\n      args = arguments;\n      // 距离上次的时间已经大约wait，直接运行\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n\n      // 这个是options.leading === false的时候做第一次调用\n      // 或者wait之内再调用的时候\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n```\n原理其实就是设置一个timer来控制发生的频率，用高阶函数来实现一个闭包，每次调用args都被赋予最新的值，最后调用fun的时候肯定是最新的args。保证一个wait左右只执行一个fn。\n然后我们来看看的他的亲兄弟``debounce``，看似很相似，其实应用场景是不太一样的。\n它的作用是拖延执行fun wait时间，wait内又调用fun那么再拖延wait时间，最后没有wait内调用那么执行，目的多次频繁的调用合并为一次执行，不需要中间的过程。\n应用场景如 form 的提交，防止两次频繁的点击。或者，markdown编辑同时渲染显示。\n```\nvar lazyLayout = _.debounce(calculateLayout, 300);\n$(window).resize(lazyLayout);\n```\n这个应用只需要最后的size就好，不需要中间的多余计算。\n源码如下：\n```\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArgs(function(args) {\n      var callNow = immediate && !timeout;\n      if (timeout) clearTimeout(timeout);\n      if (callNow) {\n        timeout = setTimeout(later, wait);\n        result = func.apply(this, args);\n      } else if (!immediate) {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n```\n每次调用都清掉先前的timeout，推移一个timeout。\n如果immediate为true的话，立刻调用，然后wait内不可以再次调用，\n可以用于form提交。\n\nddddddddddddxxxxxxxdsfdsa的点点滴滴对对对是发顺丰到付\n\n发掘的发掘\n\n这儿fksjfjsa‘\n\n大家发甲方\n\n发发神经发酒疯\nksdfksdfjk","bookId":"qENKih7B24IcYIzV","_id":"cbVLlpujhtAcFxan","createdAt":{"$$date":1472166086513},"updatedAt":{"$$date":1472178538166}}
{"title":"2222222222","content":"sdfsadfafsadsfsadfsdfsdfsfa\n\n朱克飞大傻帽\n\n多舒服法撒旦法\n\n是打发大厦\n\n啥地方司法\n\n士大夫撒旦法\n\nsdfajf \n\n\n啥打法是否收费\n\n这个东西应该挺好的\n\n我干男爵应该是可以做的\n\n发酵法附件的手机费   发顺丰骄傲是放假了\n\n这个东西要是可以孩子以后的发电机房fasfjsaj\n沙发上点击\n来房间爱书法家\n十分骄傲发生了\n\nsdfasdfjslj \n\ndsfsdfasd\n\nsfsfsdkfjksjdf","bookId":"qENKih7B24IcYIzV","_id":"fV6loM24zVCs137E","createdAt":{"$$date":1472165368895},"updatedAt":{"$$date":1472178523192}}
{"$$indexCreated":{"fieldName":"updatedAt","unique":false,"sparse":false}}
{"title":"新的文章","content":"我感觉还是好地方撒哈哈哦这栋西药师可以\n\n是打发时间放假放假\n\n收电费卡拉斯加附件阿萨德\\\\","bookId":"qENKih7B24IcYIzV","_id":"RAVxbIaad55orzgK","createdAt":{"$$date":1472178551033},"updatedAt":{"$$date":1472178652101}}
{"title":"新的文章","content":"我感觉还是好地方撒哈哈哦这栋西药师可以\n\n是打发时间放假放假\n\n收电费卡拉斯加附件阿萨德\\\\\\","bookId":"qENKih7B24IcYIzV","_id":"RAVxbIaad55orzgK","createdAt":{"$$date":1472178551033},"updatedAt":{"$$date":1472178652755}}
